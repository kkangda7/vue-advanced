{"ast":null,"code":"import { createStore } from 'vuex';\nimport { fetchNewsList, fecthAskList, fecthJobsList, fetchUserList, fecthItemList } from '../api/index';\nexport default createStore({\n  state: {\n    news: [],\n    asks: [],\n    jobs: [],\n    user: [],\n    item: []\n  },\n  getters: {// fecthedItem(state) {\n    //   return state.item;\n    // }\n  },\n  mutations: {\n    SET_NEWS(state, payload) {\n      state.news = payload;\n    },\n\n    SET_ASK(state, payload) {\n      state.asks = payload;\n    },\n\n    SET_JOBS(state, payload) {\n      state.jobs = payload;\n    },\n\n    SET_USER(state, payload) {\n      state.user = payload;\n    },\n\n    SET_ITEM(state, payload) {\n      state.item = payload;\n    }\n\n  },\n  actions: {\n    FETCH_NEWS({\n      commit\n    }) {\n      fetchNewsList().then(response => {\n        commit('SET_NEWS', response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    FETCH_ASK({\n      commit\n    }) {\n      fecthAskList().then(response => {\n        commit('SET_ASK', response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    FETCH_JOBS({\n      commit\n    }) {\n      fecthJobsList().then(response => {\n        commit('SET_JOBS', response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    FETCH_USER({\n      commit\n    }, name) {\n      fetchUserList(name).then(response => {\n        commit('SET_USER', response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    FETCH_ITEM({\n      commit\n    }, item) {\n      fecthItemList(item).then(response => {\n        commit('SET_ITEM', response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"sources":["/Users/kanghoon/Desktop/무제 폴더/src/store/index.js"],"names":["createStore","fetchNewsList","fecthAskList","fecthJobsList","fetchUserList","fecthItemList","state","news","asks","jobs","user","item","getters","mutations","SET_NEWS","payload","SET_ASK","SET_JOBS","SET_USER","SET_ITEM","actions","FETCH_NEWS","commit","then","response","data","catch","err","console","log","FETCH_ASK","FETCH_JOBS","FETCH_USER","name","FETCH_ITEM","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\nimport {\n  fetchNewsList,\n  fecthAskList,\n  fecthJobsList,\n  fetchUserList,\n  fecthItemList\n} from '../api/index'\n\nexport default createStore({\n  state: {\n    news: [],\n    asks: [],\n    jobs: [],\n    user: [],\n    item: []\n  },\n  getters: {\n    // fecthedItem(state) {\n    //   return state.item;\n    // }\n  }, \n  mutations: {\n    SET_NEWS(state, payload) {\n      state.news = payload;\n    },\n    SET_ASK(state, payload) {\n      state.asks = payload;\n    },\n    SET_JOBS(state, payload) {\n      state.jobs = payload;\n    },\n    SET_USER(state, payload) {\n      state.user = payload\n    },\n    SET_ITEM(state, payload) {\n      state.item = payload\n    }\n  },\n  actions: {\n    FETCH_NEWS({ commit }) {\n      fetchNewsList()\n        .then(response => {\n          commit('SET_NEWS', response.data);\n        })\n        .catch(err => { console.log(err); })\n    },\n    FETCH_ASK({ commit }) {\n      fecthAskList()\n        .then((response) => {\n        commit('SET_ASK', response.data)\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n    },\n    FETCH_JOBS({ commit }) {  \n      fecthJobsList()\n        .then((response) => {\n        commit('SET_JOBS', response.data)\n        })\n        .catch((err) => {\n          console.log(err);\n      })\n    },\n    FETCH_USER({ commit },name) {\n      fetchUserList(name)\n        .then((response) => {\n         commit('SET_USER', response.data)\n        })\n      .catch(err => {console.log(err)})\n    },\n    FETCH_ITEM({ commit },item ) {\n      fecthItemList(item)\n        .then((response) => {\n        commit('SET_ITEM', response.data)\n        })\n        .catch((err) => {\n        console.log(err)\n      })\n    }\n  },\n  modules: {\n  }\n})\n"]},"metadata":{},"sourceType":"module"}